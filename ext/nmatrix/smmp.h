#ifndef SMMP_H
# define SMMP_H

// TODO: This file possibly needs to be rewritten such that it is autogenerated from smmp by generator.rb.

#include <string.h>
#include "types.h"

// for when we need to return array indices.
// TODO: Make it so this is never larger than size_t
typedef uint32_t    y_size_t;
#define Y_SIZE_T    NM_INT32

typedef struct smmp_param_t {
  void *ia, *ja, *a;
  bool diag;
} YALE_PARAM;

// Shouldn't be necessary, as they're defined in types.h:
// (Oddly, though, these fix the error.)
typedef uint8_t   u_int8_t;
typedef uint16_t  u_int16_t;
typedef uint32_t  u_int32_t;
typedef uint64_t  u_int64_t;


#define SMMP_MAX_THREE(a,b,c) ((a)>(b) ? ( (a)>(c) ? (a) : (c) ) : ( (b)>(c) ? (b) : (c) ))
#define SMMP_MIN(a,b) ((a)>(b) ? (b) : (a))
#define SMMP_MAX(a,b) ((a)>(b) ? (a) : (b))

void transp(y_size_t n, y_size_t m, void* ia, void* ja, bool diaga, void* a, void* ib, void* jb, void* b, bool move, int8_t itype, int8_t dtype);

void i8_symbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_symbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_symbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_symbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_b_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_b_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i8_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i8_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i16_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i16_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_f32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_f32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_f64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_f64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_b_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_b_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i8_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i8_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i16_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i16_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_f32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_f32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_f64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_f64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_b_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_b_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i8_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i8_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i16_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i16_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_f32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_f32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_f64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_f64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_b_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_b_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i8_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i8_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i16_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i16_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_f32_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_f32_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_f64_numbmm(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_f64_smmp(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_symbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_symbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_symbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_symbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_b_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_b_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_b_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i8_i8_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i8_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_i8_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i8_i16_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i16_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_i16_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i8_i32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_i32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i8_i64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_i64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_i64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i8_f32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_f32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_f32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i8_f64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i8_f64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i8_f64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_b_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_b_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_b_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_i8_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i8_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_i8_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_i16_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i16_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_i16_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_i32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_i32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_i64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_i64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_i64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_f32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_f32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_f32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i16_f64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i16_f64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i16_f64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_b_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_b_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_b_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_i8_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i8_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_i8_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_i16_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i16_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_i16_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_i32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_i32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_i64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_i64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_i64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_f32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_f32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_f32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i32_f64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i32_f64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i32_f64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_b_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_b_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_b_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_i8_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i8_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_i8_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_i16_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i16_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_i16_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_i32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_i32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_i64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_i64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_i64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_f32_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_f32_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_f32_smmp_sort_columns_(y_size_t n, YALE_PARAM A);
void i64_f64_numbmm_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, YALE_PARAM C);
void i64_f64_transp_(y_size_t n, y_size_t m, YALE_PARAM A, YALE_PARAM B, bool move);
void i64_f64_smmp_sort_columns_(y_size_t n, YALE_PARAM A);;

#endif

