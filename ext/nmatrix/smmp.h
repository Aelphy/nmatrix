#ifndef SMMP_H
# define SMMP_H

// TODO: This file possibly needs to be rewritten such that it is autogenerated from smmp by generator.rb.

#include "types.h"

// Shouldn't be necessary, as they're defined in types.h:
// (Oddly, though, these fix the error.)
typedef uint8_t   u_int8_t;
typedef uint16_t  u_int16_t;
typedef uint32_t  u_int32_t;
typedef uint64_t  u_int64_t;


#define SMMP_MAX_THREE(a,b,c) ((a)>(b) ? ( (a)>(c) ? (a) : (c) ) : ( (b)>(c) ? (b) : (c) ))
#define SMMP_MIN(a,b) ((a)>(b) ? (b) : (a))
#define SMMP_MAX(a,b) ((a)>(b) ? (a) : (b))

void i8_b_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, u_int8_t *a, u_int8_t *ib, u_int8_t *jb, u_int8_t *b, bool move);
void i8_i8_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int8_t *a, u_int8_t *ib, u_int8_t *jb, int8_t *b, bool move);
void i8_i16_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int16_t *a, u_int8_t *ib, u_int8_t *jb, int16_t *b, bool move);
void i8_i32_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int32_t *a, u_int8_t *ib, u_int8_t *jb, int32_t *b, bool move);
void i8_i64_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int64_t *a, u_int8_t *ib, u_int8_t *jb, int64_t *b, bool move);
void i8_f32_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, float *a, u_int8_t *ib, u_int8_t *jb, float *b, bool move);
void i8_f64_transp_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, double *a, u_int8_t *ib, u_int8_t *jb, double *b, bool move);
void i16_b_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, u_int8_t *a, u_int16_t *ib, u_int16_t *jb, u_int8_t *b, bool move);
void i16_i8_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int8_t *a, u_int16_t *ib, u_int16_t *jb, int8_t *b, bool move);
void i16_i16_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int16_t *a, u_int16_t *ib, u_int16_t *jb, int16_t *b, bool move);
void i16_i32_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int32_t *a, u_int16_t *ib, u_int16_t *jb, int32_t *b, bool move);
void i16_i64_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int64_t *a, u_int16_t *ib, u_int16_t *jb, int64_t *b, bool move);
void i16_f32_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, float *a, u_int16_t *ib, u_int16_t *jb, float *b, bool move);
void i16_f64_transp_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, double *a, u_int16_t *ib, u_int16_t *jb, double *b, bool move);
void i32_b_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, u_int8_t *a, u_int32_t *ib, u_int32_t *jb, u_int8_t *b, bool move);
void i32_i8_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int8_t *a, u_int32_t *ib, u_int32_t *jb, int8_t *b, bool move);
void i32_i16_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int16_t *a, u_int32_t *ib, u_int32_t *jb, int16_t *b, bool move);
void i32_i32_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int32_t *a, u_int32_t *ib, u_int32_t *jb, int32_t *b, bool move);
void i32_i64_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int64_t *a, u_int32_t *ib, u_int32_t *jb, int64_t *b, bool move);
void i32_f32_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, float *a, u_int32_t *ib, u_int32_t *jb, float *b, bool move);
void i32_f64_transp_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, double *a, u_int32_t *ib, u_int32_t *jb, double *b, bool move);
void i64_b_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, u_int8_t *a, u_int64_t *ib, u_int64_t *jb, u_int8_t *b, bool move);
void i64_i8_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int8_t *a, u_int64_t *ib, u_int64_t *jb, int8_t *b, bool move);
void i64_i16_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int16_t *a, u_int64_t *ib, u_int64_t *jb, int16_t *b, bool move);
void i64_i32_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int32_t *a, u_int64_t *ib, u_int64_t *jb, int32_t *b, bool move);
void i64_i64_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int64_t *a, u_int64_t *ib, u_int64_t *jb, int64_t *b, bool move);
void i64_f32_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, float *a, u_int64_t *ib, u_int64_t *jb, float *b, bool move);
void i64_f64_transp_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, double *a, u_int64_t *ib, u_int64_t *jb, double *b, bool move);

void i8_symbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, u_int8_t *ib, u_int8_t *jb, bool diagb, u_int8_t *ic, u_int8_t *jc, bool diagc);
void i16_symbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, u_int16_t *ib, u_int16_t *jb, bool diagb, u_int16_t *ic, u_int16_t *jc, bool diagc);
void i32_symbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, u_int32_t *ib, u_int32_t *jb, bool diagb, u_int32_t *ic, u_int32_t *jc, bool diagc);
void i64_symbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, u_int64_t *ib, u_int64_t *jb, bool diagb, u_int64_t *ic, u_int64_t *jc, bool diagc);

void i8_b_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, u_int8_t *a, u_int8_t *ib, u_int8_t *jb,bool diagb, u_int8_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, u_int8_t *c);
void i8_i8_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int8_t *a, u_int8_t *ib, u_int8_t *jb,bool diagb, int8_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int8_t *c);
void i8_i16_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int16_t *a, u_int8_t *ib, u_int8_t *jb,	bool diagb, int16_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int16_t *c);
void i8_i32_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int32_t *a, u_int8_t *ib, u_int8_t *jb,	bool diagb, int32_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int32_t *c);
void i8_i64_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int64_t *a, u_int8_t *ib, u_int8_t *jb,	bool diagb, int64_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int64_t *c);
void i8_f32_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, float *a, u_int8_t *ib, u_int8_t *jb,bool diagb, float *b, u_int8_t *ic, u_int8_t *jc, bool diagc, float *c);
void i8_f64_numbmm_(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, double *a, u_int8_t *ib, u_int8_t *jb,bool diagb, double *b, u_int8_t *ic, u_int8_t *jc, bool diagc, double *c);
void i16_b_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, u_int8_t *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, u_int8_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, u_int8_t *c);
void i16_i8_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int8_t *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, int8_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int8_t *c);
void i16_i16_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int16_t *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, int16_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int16_t *c);
void i16_i32_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int32_t *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, int32_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int32_t *c);
void i16_i64_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int64_t *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, int64_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int64_t *c);
void i16_f32_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, float *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, float *b, u_int16_t *ic, u_int16_t *jc, bool diagc, float *c);
void i16_f64_numbmm_(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, double *a, u_int16_t *ib, u_int16_t *jb,	bool diagb, double *b, u_int16_t *ic, u_int16_t *jc, bool diagc, double *c);
void i32_b_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, u_int8_t *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, u_int8_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, u_int8_t *c);
void i32_i8_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int8_t *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, int8_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int8_t *c);
void i32_i16_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int16_t *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, int16_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int16_t *c);
void i32_i32_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int32_t *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, int32_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int32_t *c);
void i32_i64_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int64_t *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, int64_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int64_t *c);
void i32_f32_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, float *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, float *b, u_int32_t *ic, u_int32_t *jc, bool diagc, float *c);
void i32_f64_numbmm_(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, double *a, u_int32_t *ib, u_int32_t *jb,	bool diagb, double *b, u_int32_t *ic, u_int32_t *jc, bool diagc, double *c);
void i64_b_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, u_int8_t *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, u_int8_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, u_int8_t *c);
void i64_i8_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int8_t *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, int8_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int8_t *c);
void i64_i16_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int16_t *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, int16_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int16_t *c);
void i64_i32_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int32_t *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, int32_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int32_t *c);
void i64_i64_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int64_t *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, int64_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int64_t *c);
void i64_f32_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, float *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, float *b, u_int64_t *ic, u_int64_t *jc, bool diagc, float *c);
void i64_f64_numbmm_(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, double *a, u_int64_t *ib, u_int64_t *jb,	bool diagb, double *b, u_int64_t *ic, u_int64_t *jc, bool diagc, double *c);

void i8_b_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, u_int8_t *a);
void i8_i8_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, int8_t *a);
void i8_i16_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, int16_t *a);
void i8_i32_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, int32_t *a);
void i8_i64_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, int64_t *a);
void i8_f32_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, float *a);
void i8_f64_smmp_sort_columns_(u_int8_t n, u_int8_t *ia, u_int8_t *ja, double *a);
void i16_b_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, u_int8_t *a);
void i16_i8_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, int8_t *a);
void i16_i16_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, int16_t *a);
void i16_i32_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, int32_t *a);
void i16_i64_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, int64_t *a);
void i16_f32_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, float *a);
void i16_f64_smmp_sort_columns_(u_int16_t n, u_int16_t *ia, u_int16_t *ja, double *a);
void i32_b_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, u_int8_t *a);
void i32_i8_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, int8_t *a);
void i32_i16_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, int16_t *a);
void i32_i32_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, int32_t *a);
void i32_i64_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, int64_t *a);
void i32_f32_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, float *a);
void i32_f64_smmp_sort_columns_(u_int32_t n, u_int32_t *ia, u_int32_t *ja, double *a);
void i64_b_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, u_int8_t *a);
void i64_i8_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, int8_t *a);
void i64_i16_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, int16_t *a);
void i64_i32_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, int32_t *a);
void i64_i64_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, int64_t *a);
void i64_f32_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, float *a);
void i64_f64_smmp_sort_columns_(u_int64_t n, u_int64_t *ia, u_int64_t *ja, double *a);

void i8_symbmm(u_int8_t n, u_int8_t m, u_int8_t l, u_int8_t* ia, u_int8_t* ja, bool diaga, u_int8_t* ib, u_int8_t* jb, bool diagb, u_int8_t* ic, u_int8_t* jc, bool diagc);
void i16_symbmm(u_int16_t n, u_int16_t m, u_int16_t l, u_int16_t* ia, u_int16_t* ja, bool diaga, u_int16_t* ib, u_int16_t* jb, bool diagb, u_int16_t* ic, u_int16_t* jc, bool diagc);
void i32_symbmm(u_int32_t n, u_int32_t m, u_int32_t l, u_int32_t* ia, u_int32_t* ja, bool diaga, u_int32_t* ib, u_int32_t* jb, bool diagb, u_int32_t* ic, u_int32_t* jc, bool diagc);
void i64_symbmm(u_int64_t n, u_int64_t m, u_int64_t l, u_int64_t* ia, u_int64_t* ja, bool diaga, u_int64_t* ib, u_int64_t* jb, bool diagb, u_int64_t* ic, u_int64_t* jc, bool diagc);

void i8_b_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, u_int8_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, u_int8_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, u_int8_t *c);
void i8_b_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, u_int8_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, u_int8_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, u_int8_t *c);
void i8_i8_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int8_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int8_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int8_t *c);
void i8_i8_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int8_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int8_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int8_t *c);
void i8_i16_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int16_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int16_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int16_t *c);
void i8_i16_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int16_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int16_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int16_t *c);
void i8_i32_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int32_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int32_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int32_t *c);
void i8_i32_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int32_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int32_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int32_t *c);
void i8_i64_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int64_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int64_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int64_t *c);
void i8_i64_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, int64_t *a, u_int8_t *ib, u_int8_t *jb, bool diagb, int64_t *b, u_int8_t *ic, u_int8_t *jc, bool diagc, int64_t *c);
void i8_f32_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, float *a, u_int8_t *ib, u_int8_t *jb, bool diagb, float *b, u_int8_t *ic, u_int8_t *jc, bool diagc, float *c);
void i8_f32_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, float *a, u_int8_t *ib, u_int8_t *jb, bool diagb, float *b, u_int8_t *ic, u_int8_t *jc, bool diagc, float *c);
void i8_f64_numbmm(u_int8_t n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, double *a, u_int8_t *ib, u_int8_t *jb, bool diagb, double *b, u_int8_t *ic, u_int8_t *jc, bool diagc, double *c);
void i8_f64_smmp(u_int8_t  n, u_int8_t m, u_int8_t *ia, u_int8_t *ja, bool diaga, double *a, u_int8_t *ib, u_int8_t *jb, bool diagb, double *b, u_int8_t *ic, u_int8_t *jc, bool diagc, double *c);
void i16_b_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, u_int8_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, u_int8_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, u_int8_t *c);
void i16_b_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, u_int8_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, u_int8_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, u_int8_t *c);
void i16_i8_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int8_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int8_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int8_t *c);
void i16_i8_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int8_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int8_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int8_t *c);
void i16_i16_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int16_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int16_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int16_t *c);
void i16_i16_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int16_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int16_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int16_t *c);
void i16_i32_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int32_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int32_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int32_t *c);
void i16_i32_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int32_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int32_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int32_t *c);
void i16_i64_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int64_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int64_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int64_t *c);
void i16_i64_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, int64_t *a, u_int16_t *ib, u_int16_t *jb, bool diagb, int64_t *b, u_int16_t *ic, u_int16_t *jc, bool diagc, int64_t *c);
void i16_f32_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, float *a, u_int16_t *ib, u_int16_t *jb, bool diagb, float *b, u_int16_t *ic, u_int16_t *jc, bool diagc, float *c);
void i16_f32_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, float *a, u_int16_t *ib, u_int16_t *jb, bool diagb, float *b, u_int16_t *ic, u_int16_t *jc, bool diagc, float *c);
void i16_f64_numbmm(u_int16_t n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, double *a, u_int16_t *ib, u_int16_t *jb, bool diagb, double *b, u_int16_t *ic, u_int16_t *jc, bool diagc, double *c);
void i16_f64_smmp(u_int16_t  n, u_int16_t m, u_int16_t *ia, u_int16_t *ja, bool diaga, double *a, u_int16_t *ib, u_int16_t *jb, bool diagb, double *b, u_int16_t *ic, u_int16_t *jc, bool diagc, double *c);
void i32_b_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, u_int8_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, u_int8_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, u_int8_t *c);
void i32_b_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, u_int8_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, u_int8_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, u_int8_t *c);
void i32_i8_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int8_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int8_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int8_t *c);
void i32_i8_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int8_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int8_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int8_t *c);
void i32_i16_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int16_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int16_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int16_t *c);
void i32_i16_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int16_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int16_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int16_t *c);
void i32_i32_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int32_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int32_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int32_t *c);
void i32_i32_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int32_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int32_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int32_t *c);
void i32_i64_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int64_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int64_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int64_t *c);
void i32_i64_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, int64_t *a, u_int32_t *ib, u_int32_t *jb, bool diagb, int64_t *b, u_int32_t *ic, u_int32_t *jc, bool diagc, int64_t *c);
void i32_f32_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, float *a, u_int32_t *ib, u_int32_t *jb, bool diagb, float *b, u_int32_t *ic, u_int32_t *jc, bool diagc, float *c);
void i32_f32_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, float *a, u_int32_t *ib, u_int32_t *jb, bool diagb, float *b, u_int32_t *ic, u_int32_t *jc, bool diagc, float *c);
void i32_f64_numbmm(u_int32_t n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, double *a, u_int32_t *ib, u_int32_t *jb, bool diagb, double *b, u_int32_t *ic, u_int32_t *jc, bool diagc, double *c);
void i32_f64_smmp(u_int32_t  n, u_int32_t m, u_int32_t *ia, u_int32_t *ja, bool diaga, double *a, u_int32_t *ib, u_int32_t *jb, bool diagb, double *b, u_int32_t *ic, u_int32_t *jc, bool diagc, double *c);
void i64_b_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, u_int8_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, u_int8_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, u_int8_t *c);
void i64_b_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, u_int8_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, u_int8_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, u_int8_t *c);
void i64_i8_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int8_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int8_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int8_t *c);
void i64_i8_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int8_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int8_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int8_t *c);
void i64_i16_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int16_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int16_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int16_t *c);
void i64_i16_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int16_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int16_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int16_t *c);
void i64_i32_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int32_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int32_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int32_t *c);
void i64_i32_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int32_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int32_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int32_t *c);
void i64_i64_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int64_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int64_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int64_t *c);
void i64_i64_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, int64_t *a, u_int64_t *ib, u_int64_t *jb, bool diagb, int64_t *b, u_int64_t *ic, u_int64_t *jc, bool diagc, int64_t *c);
void i64_f32_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, float *a, u_int64_t *ib, u_int64_t *jb, bool diagb, float *b, u_int64_t *ic, u_int64_t *jc, bool diagc, float *c);
void i64_f32_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, float *a, u_int64_t *ib, u_int64_t *jb, bool diagb, float *b, u_int64_t *ic, u_int64_t *jc, bool diagc, float *c);
void i64_f64_numbmm(u_int64_t n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, double *a, u_int64_t *ib, u_int64_t *jb, bool diagb, double *b, u_int64_t *ic, u_int64_t *jc, bool diagc, double *c);
void i64_f64_smmp(u_int64_t  n, u_int64_t m, u_int64_t *ia, u_int64_t *ja, bool diaga, double *a, u_int64_t *ib, u_int64_t *jb, bool diagb, double *b, u_int64_t *ic, u_int64_t *jc, bool diagc, double *c);

#endif
